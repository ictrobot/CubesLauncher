buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'gradle.plugin.edu.sc.seis.gradle:launch4j:1.6.1'
    }
}
apply plugin: 'java'
apply plugin: "maven-publish"
apply plugin: 'edu.sc.seis.launch4j'

sourceCompatibility = 1.7

sourceSets.main.java.srcDirs = ["src/"]
project.ext.mainClassName = 'ethanjones.cubes.launcher.CubesLauncher'
version = '0.0.1'

ext {
    isRelease = false
    localProperties = new Properties()
    if (file("build.properties").exists()) {
        file("build.properties").withReader { reader ->
            localProperties.load(reader)
        }
    }
    if (localProperties.MAVEN_REPO_PATH == null) localProperties.MAVEN_REPO_PATH = getRootProject().getProjectDir().absolutePath + "/repo/"
    if (localProperties.MAVEN_REPO_USERNAME == null) localProperties.MAVEN_REPO_USERNAME = ""
    if (localProperties.MAVEN_REPO_PASSWORD == null) localProperties.MAVEN_REPO_PASSWORD = ""
}

repositories {
    mavenCentral()
}

configurations {
    includeInJar
    compile.extendsFrom(includeInJar)
}

dependencies {
    includeInJar "commons-net:commons-net:3.5"
}

jar.from { configurations.includeInJar.collect { it.isDirectory() ? it : zipTree(it) } }
jar.from { new File("assets") }
jar.manifest.attributes 'Main-Class': project.mainClassName
jar.archiveName = 'launcher.jar'

launch4j {
    mainClassName = project.mainClassName
    jreMinVersion = '1.7.0'

    initialHeapSize = 2048
    maxHeapSize = 2048

    version = version
    textVersion = version

    icon = project.getRootDir().absolutePath + "/assets/icon.ico"
    copyConfigurable = project.tasks.jar.outputs.files
    jar = new File(project.buildDir, "/libs/launcher.jar")
}
copyL4jLib.dependsOn jar


task sourceJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource

    classifier = 'sources'
}

task jars(dependsOn: ['jar', 'sourceJar']) {

}

publishing {
    publications {
        jar(MavenPublication) {
            artifact tasks.jar
            artifact tasks.sourceJar
            artifact(new File(project.getBuildDir(), '/launch4j/CubesLauncher.exe')) {
                classifier = 'win'
            }
            groupId 'ethanjones.cubes'
            artifactId 'launcher'
            version getMavenVersionString()
        }
    }
    repositories {
        maven {
            url getMavenRepo()
            credentials {
                username localProperties.MAVEN_REPO_USERNAME
                password localProperties.MAVEN_REPO_PASSWORD
            }
        }
    }
}
publish.dependsOn(['jar', 'sourceJar', 'launch4j'])

def String getMavenVersionString() {
    def str = version;
    if (!isRelease) {
        str = str + "-SNAPSHOT"
    }
    return str
}

def String getMavenRepo() {
    def str = localProperties.MAVEN_REPO_PATH
    if (isRelease) {
        str = str + "releases"
    } else {
        str = str + "snapshots"
    }
    return str
}